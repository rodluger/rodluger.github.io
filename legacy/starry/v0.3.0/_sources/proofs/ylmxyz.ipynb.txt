{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Spherical harmonics\n",
    "\n",
    "## $Y_{lm}(x, y, z)$\n",
    "\n",
    "#### Code to compute the spherical harmonic $Y_{lm}(x,y,z)$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We begin by importing some stuff and defining our functions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Using sympy version 1.3\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from IPython.display import display, Math\n",
    "import sympy\n",
    "from sympy import *\n",
    "from sympy.functions.special.tensor_functions import KroneckerDelta\n",
    "\n",
    "# Initialize the session\n",
    "init_session(quiet=True)\n",
    "\n",
    "# I am using the dev version of sympy\n",
    "print(\"Using sympy version\", sympy.__version__)\n",
    "\n",
    "# Define our symbols\n",
    "x, y, z, mu, nu, l, m, j, k, p, q = symbols('x y z mu nu l m j k p q')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/latex": [
       "$$\\frac{\\sqrt{\\frac{\\left(2 l + 1\\right) \\left(- \\delta_{0 m} + 2\\right) \\left(l - m\\right)!}{\\left(l + m\\right)!}}}{2 \\sqrt{\\pi}}$$"
      ],
      "text/plain": [
       "     _________________________________\n",
       "    ╱ (2⋅l + 1)⋅⎛- δ    + 2⎞⋅(l - m)! \n",
       "   ╱            ⎝   0,m    ⎠          \n",
       "  ╱   ─────────────────────────────── \n",
       "╲╱                (l + m)!            \n",
       "──────────────────────────────────────\n",
       "                 2⋅√π                 "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def A(l, m):\n",
    "    \"\"\"A spherical harmonic normalization constant.\"\"\"\n",
    "    return sqrt((2 - KroneckerDelta(m, 0)) * (2 * l + 1) * factorial(l - m) / (4 * pi * factorial(l + m)))\n",
    "\n",
    "# Print it\n",
    "A(l, m)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/latex": [
       "$$\\frac{2^{l} m! \\left(\\frac{k}{2} + \\frac{l}{2} + \\frac{m}{2} - \\frac{1}{2}\\right)!}{j! k! \\left(- j + m\\right)! \\left(- k + l - m\\right)! \\left(\\frac{k}{2} - \\frac{l}{2} + \\frac{m}{2} - \\frac{1}{2}\\right)!}$$"
      ],
      "text/plain": [
       "             l    ⎛k   l   m   1⎞             \n",
       "            2 ⋅m!⋅⎜─ + ─ + ─ - ─⎟!            \n",
       "                  ⎝2   2   2   2⎠             \n",
       "──────────────────────────────────────────────\n",
       "                              ⎛k   l   m   1⎞ \n",
       "j!⋅k!⋅(-j + m)!⋅(-k + l - m)!⋅⎜─ - ─ + ─ - ─⎟!\n",
       "                              ⎝2   2   2   2⎠ "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def B(l, m, j, k):\n",
    "    \"\"\"Another spherical harmonic normalization constant.\"\"\"\n",
    "    # NOTE: The factorial of a negative integer is +/- infinity. This can happen in the denominator\n",
    "    # of the expression for `B`, so in that case `B = 0` exactly. Let's override the error `sympy`\n",
    "    # throws because the value is undetermined and set the value of `B` to zero directly in this case.\n",
    "    try: \n",
    "        ratio = factorial((l + m + k - 1) / 2) / factorial((-l + m + k - 1) / 2)\n",
    "    except ValueError:\n",
    "        ratio = 0\n",
    "    return 2 ** l * factorial(m) / (factorial(j) * factorial(k) * factorial(m - j) * factorial(l - m - k)) * ratio\n",
    "\n",
    "# Print it\n",
    "B(l, m, j, k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Yxyz(l, m, x, y, z):\n",
    "    \"\"\"Return the spherical harmonic of degree `l` and order `m` as a function of `x`, `y`, and `z`.\"\"\"\n",
    "    res = 0\n",
    "    if (m >= 0):\n",
    "        for j in range(0, m + 1, 2):\n",
    "            for k in range(0, l - m + 1):\n",
    "                res += (-1) ** (j // 2) * A(l, m) * B(l, m, j, k) * x ** (m - j) * y ** j * z ** k\n",
    "    else:\n",
    "        for j in range(1, abs(m) + 1, 2):\n",
    "            for k in range(0, l - abs(m) + 1):\n",
    "                res += (-1) ** ((j - 1) // 2) * A(l, abs(m)) * B(l, abs(m), j, k) * x ** (abs(m) - j) * y ** j * z ** k\n",
    "    return res"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's compute and display the spherical harmonics up to and including degree $l = 3$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAFUAAAAYCAYAAACLM7HoAAAABHNCSVQICAgIfAhkiAAAA+tJREFUWIXt2GuoFVUUwPGf2cO3mVERleYtKSoyoReVXhIkkB76IQnEPvQls4ge9PkKUUQUFVEGkRRW0FtILhXVoRcFFWZFFmUngjSzh5XXzOr2Ye2D4zRzZs5R0w/nD8PmrLX23uus2XuvtYcePXrsP1yE7XgRw3vwqaQ/12Hdnvk/+wVP4Jo9PObhagS5PykaGMC1BTbH4BF8J958E/dgUocONQscaj0bK/oeib9xX825JuBnHNahj1WMEXEasPP/gAMLjBvJME8f3sERWCVW8lm4Xmyv8/BjB05tES8kz+8V/S7FAXi+5jyX4zX8VN+1WgzZGad+TCky6hfRHihS4qWkvy4nvzvJl3fgUDM93TCIzRhZ0/5NXNLlXHVpqNj+AwW6aUn3tVglWcaL1bUVY2s60dRdUCeKY2dFTftp2ISDSvTz1E9KM9rM01Cx/Yu4MLUv45+c7je8jbk4B6/WHPMQLMJx4oWsxRvivCxjHg7Gczn5WHF2bsjJF+NJ7CgZbwsexBJ8imcyupOwEG/hleRfx/QrX6l3Jt1NJX3vT/olNedqKl4N6zG7Tb+nxa4YlX5PF0HbisdztiPSeDMrfJmf5r41J78lya+q6E9upea3chkTU7ulRN+SH1pzvBWYg6PEKjsND2GqODNPL+gzSiTEQfyRZL/iLnyAyzAuY3+BSCYfVvjS2tZrcvKZJfJK6ga1ihGprVUQY5nIyN+LP/4JrhZJb7Ti3TJXBC2b9TfifawUJc6CjO5KPFrDl1ZQP8rJZ+Kv5FtH1A1qayVOLNFPyNl1S6uCmFWgm48/sbpA95RIYIvS79EiwPkjoYgZ4kj5MiMbhxNE2bi9xhi7UDeon6d2eon+xNR+0akDOTalNl9FjMTFYnUXvbhfRLDn4GgR0PfEJaUdk0SiXGvXXXaG2H0db33qB/X11M4t6DNeFP7b8G43TmQ4N7Xrc/JZmKx9wb8y+XaFyPq7u/XZy0H9SpRTU7E0p1smVtZjIgtn6ROlSbZOPEXxlXGKqCKIAGVZIEq5VW18XC2uo0vFTe+FNrYtypLUqan9uMYYbenX/kbVJxLLsHD4drEdh8XxMLmgTzPpp2ZkAyJ7D+IB3CHqw23JdrWoRbN8K25GVSxPYzxcw5ZYzcM4Oyd/NslvEN87qmjo4kbV4lhRDm0QSeMb3Kv8Y0XTf4M6W9SW68RZuAM/iAJ7sZ2VRIsz0xg3tvGrxfnJtijRFbFGXDbG5OQLxVV4CDfXGKdhN4K6L7hN+HV8DdsR4qKSfzF7m4aKoO5v31M/02XC2MuUfk/N3v2bIum02Px/eFaDk/e1AyUM2TVePXr06PEv2msa7xv/uA8AAAAASUVORK5CYII=\n",
      "text/latex": [
       "$$\\left [ \\frac{0.5}{\\sqrt{\\pi}}\\right ]$$"
      ],
      "text/plain": [
       "⎡0.5⎤\n",
       "⎢───⎥\n",
       "⎣ √π⎦"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/latex": [
       "$$\\left [ \\frac{0.5 \\sqrt{3} y}{\\sqrt{\\pi}}, \\quad \\frac{0.5 \\sqrt{3} z}{\\sqrt{\\pi}}, \\quad \\frac{0.5 \\sqrt{3} x}{\\sqrt{\\pi}}\\right ]$$"
      ],
      "text/plain": [
       "⎡0.5⋅√3⋅y  0.5⋅√3⋅z  0.5⋅√3⋅x⎤\n",
       "⎢────────, ────────, ────────⎥\n",
       "⎣   √π        √π        √π   ⎦"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/latex": [
       "$$\\left [ \\frac{0.5 \\sqrt{15} x y}{\\sqrt{\\pi}}, \\quad \\frac{0.5 \\sqrt{15} y z}{\\sqrt{\\pi}}, \\quad \\frac{0.75 \\sqrt{5} z^{2}}{\\sqrt{\\pi}} - \\frac{0.25 \\sqrt{5}}{\\sqrt{\\pi}}, \\quad \\frac{0.5 \\sqrt{15} x z}{\\sqrt{\\pi}}, \\quad \\frac{0.25 \\sqrt{15} x^{2}}{\\sqrt{\\pi}} - \\frac{0.25 \\sqrt{15} y^{2}}{\\sqrt{\\pi}}\\right ]$$"
      ],
      "text/plain": [
       "⎡                                   2                                   2     \n",
       "⎢0.5⋅√15⋅x⋅y  0.5⋅√15⋅y⋅z  0.75⋅√5⋅z    0.25⋅√5  0.5⋅√15⋅x⋅z  0.25⋅√15⋅x    0.\n",
       "⎢───────────, ───────────, ────────── - ───────, ───────────, ─────────── - ──\n",
       "⎣     √π           √π          √π          √π         √π           √π         \n",
       "\n",
       "        2⎤\n",
       "25⋅√15⋅y ⎥\n",
       "─────────⎥\n",
       "   √π    ⎦"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/latex": [
       "$$\\left [ \\frac{0.375 \\sqrt{70} x^{2} y}{\\sqrt{\\pi}} - \\frac{0.125 \\sqrt{70} y^{3}}{\\sqrt{\\pi}}, \\quad \\frac{0.5 \\sqrt{105} x y z}{\\sqrt{\\pi}}, \\quad \\frac{0.625 \\sqrt{42} y z^{2}}{\\sqrt{\\pi}} - \\frac{0.125 \\sqrt{42} y}{\\sqrt{\\pi}}, \\quad \\frac{1.25 \\sqrt{7} z^{3}}{\\sqrt{\\pi}} - \\frac{0.75 \\sqrt{7} z}{\\sqrt{\\pi}}, \\quad \\frac{0.625 \\sqrt{42} x z^{2}}{\\sqrt{\\pi}} - \\frac{0.125 \\sqrt{42} x}{\\sqrt{\\pi}}, \\quad \\frac{0.25 \\sqrt{105} x^{2} z}{\\sqrt{\\pi}} - \\frac{0.25 \\sqrt{105} y^{2} z}{\\sqrt{\\pi}}, \\quad \\frac{0.125 \\sqrt{70} x^{3}}{\\sqrt{\\pi}} - \\frac{0.375 \\sqrt{70} x y^{2}}{\\sqrt{\\pi}}\\right ]$$"
      ],
      "text/plain": [
       "⎡           2                3                               2                \n",
       "⎢0.375⋅√70⋅x ⋅y   0.125⋅√70⋅y   0.5⋅√105⋅x⋅y⋅z  0.625⋅√42⋅y⋅z    0.125⋅√42⋅y  \n",
       "⎢────────────── - ────────────, ──────────────, ────────────── - ───────────, \n",
       "⎣      √π              √π             √π              √π              √π      \n",
       "\n",
       "         3                           2                           2            \n",
       "1.25⋅√7⋅z    0.75⋅√7⋅z  0.625⋅√42⋅x⋅z    0.125⋅√42⋅x  0.25⋅√105⋅x ⋅z   0.25⋅√1\n",
       "────────── - ─────────, ────────────── - ───────────, ────────────── - ───────\n",
       "    √π           √π           √π              √π            √π               √\n",
       "\n",
       "    2               3                2⎤\n",
       "05⋅y ⋅z  0.125⋅√70⋅x    0.375⋅√70⋅x⋅y ⎥\n",
       "───────, ──────────── - ──────────────⎥\n",
       "π             √π              √π      ⎦"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "lmax = 3\n",
    "for l in range(lmax + 1):\n",
    "    display([Yxyz(l, m, x, y, z) for m in range(-l, l + 1)],)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From [Wikipedia](https://en.wikipedia.org/wiki/Table_of_spherical_harmonics#Real_spherical_harmonics), the real spherical harmonics up to degree $l = 3$ on the unit sphere are:\n",
    "\n",
    "\n",
    "$\\frac{1}{2} \\sqrt{\\frac{1}{\\pi}}$\n",
    "\n",
    "$\\sqrt{\\frac{3}{4 \\pi}} \\cdot y, \n",
    "\\sqrt{\\frac{3}{4 \\pi}} \\cdot z,\n",
    "\\sqrt{\\frac{3}{4 \\pi}} \\cdot x$\n",
    "\n",
    "$\\frac{1}{2} \\sqrt{\\frac{15}{\\pi}} \\cdot x y,\n",
    "\\frac{1}{2} \\sqrt{\\frac{15}{\\pi}} \\cdot y z,\n",
    "\\frac{1}{4} \\sqrt{\\frac{5}{\\pi}} \\cdot (- x^2 - y^2 + 2 z^2),\n",
    "\\frac{1}{2} \\sqrt{\\frac{15}{\\pi}} \\cdot z x,\n",
    "\\frac{1}{4} \\sqrt{\\frac{15}{\\pi}} \\cdot (x^2 - y^2)$\n",
    "\n",
    "$\\frac{1}{4} \\sqrt{\\frac{35}{2 \\pi}} \\cdot \\left( 3 x^2 - y^2 \\right) y,\n",
    "\\frac{1}{2} \\sqrt{\\frac{105}{\\pi}} \\cdot xy z,\n",
    "\\frac{1}{4} \\sqrt{\\frac{21}{2 \\pi}} \\cdot y (4 z^2 - x^2 - y^2),\n",
    "\\frac{1}{4} \\sqrt{\\frac{7}{\\pi}} \\cdot z (2 z^2 - 3 x^2 - 3 y^2),\n",
    "\\frac{1}{4} \\sqrt{\\frac{21}{2 \\pi}} \\cdot x (4 z^2 - x^2 - y^2),\n",
    "\\frac{1}{4} \\sqrt{\\frac{105}{\\pi}} \\cdot \\left( x^2 - y^2 \\right) z,\n",
    "\\frac{1}{4} \\sqrt{\\frac{35}{2 \\pi}} \\cdot \\left( x^2 - 3 y^2 \\right) x$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Recalling that $z^2 = 1 - x^2 - y^2$, the expressions agree.\n",
    "\n",
    "■"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## $Y_{lm}(x, y)$\n",
    "\n",
    "#### Code to compute the spherical harmonic $Y_{lm}(x,y)$ (expressions where powers of $z$ are reduced to powers of $x$ and $y$)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/latex": [
       "$$\\frac{\\left(\\frac{k}{2}\\right)!}{\\left(\\frac{q}{2}\\right)! \\left(\\frac{k}{2} - \\frac{p}{2}\\right)! \\left(\\frac{p}{2} - \\frac{q}{2}\\right)!}$$"
      ],
      "text/plain": [
       "         ⎛k⎞          \n",
       "         ⎜─⎟!         \n",
       "         ⎝2⎠          \n",
       "──────────────────────\n",
       "⎛q⎞  ⎛k   p⎞  ⎛p   q⎞ \n",
       "⎜─⎟!⋅⎜─ - ─⎟!⋅⎜─ - ─⎟!\n",
       "⎝2⎠  ⎝2   2⎠  ⎝2   2⎠ "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def C(p, q, k):\n",
    "    \"\"\"Return the binomial theorem coefficient `C`.\"\"\"\n",
    "    return factorial(k / 2) / (factorial(q / 2) * factorial((k - p) / 2) * factorial((p - q) / 2))\n",
    "\n",
    "# Print it\n",
    "C(p, q, k)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Y(l, m, x, y):\n",
    "    \"\"\"Return the spherical harmonic of degree `l` and order `m`.\"\"\"\n",
    "    res = 0\n",
    "    z = sqrt(1 - x ** 2 - y ** 2)\n",
    "    if (m >= 0):\n",
    "        for j in range(0, m + 1, 2):\n",
    "            for k in range(0, l - m + 1, 2):\n",
    "                for p in range(0, k + 1, 2):\n",
    "                    for q in range(0, p + 1, 2):\n",
    "                        res += (-1) ** ((j + p) // 2) * A(l, m) * B(l, m, j, k) * C(p, q, k) * x ** (m - j + p - q) * y ** (j + q)\n",
    "            for k in range(1, l - m + 1, 2):\n",
    "                for p in range(0, k, 2):\n",
    "                    for q in range(0, p + 1, 2):\n",
    "                        res += (-1) ** ((j + p) // 2) * A(l, m) * B(l, m, j, k) * C(p, q, k - 1) * x ** (m - j + p - q) * y ** (j + q) * z          \n",
    "    else:\n",
    "        for j in range(1, abs(m) + 1, 2):\n",
    "            for k in range(0, l - abs(m) + 1, 2):\n",
    "                for p in range(0, k + 1, 2):\n",
    "                    for q in range(0, p + 1, 2):\n",
    "                        res += (-1) ** ((j + p - 1) // 2) * A(l, abs(m)) * B(l, abs(m), j, k) * C(p, q, k) * x ** (abs(m) - j + p - q) * y ** (j + q)\n",
    "            for k in range(1, l - abs(m) + 1, 2):\n",
    "                for p in range(0, k, 2):\n",
    "                    for q in range(0, p + 1, 2):\n",
    "                        res += (-1) ** ((j + p - 1) // 2) * A(l, abs(m)) * B(l, abs(m), j, k) * C(p, q, k - 1) * x ** (abs(m) - j + p - q) * y ** (j + q) * z\n",
    "\n",
    "    return res"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's check that if we set $z^2 = 1 - x^2 - y^2$ our expressions $Y_{lm}(x, y, z)$ and $Y_{lm}(x, y)$ agree:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAB0AAAAVCAYAAAC6wOViAAAABHNCSVQICAgIfAhkiAAAAUpJREFUSInl1U0rRFEYB/AfWRGjxlIR4QsoZDNZyMdgLStfwNiwsrCylE8wWxZeFspH8JIoCymSvO2MxZxppts9zOWWhX/d/vX8z3n+z7nn5eGPUUK16Tv9Zb6+RL5qXehIGXyEQ9ynaP1YxRyKuEUFZTwmxr6FOMxjIK2yUqhmJVL5MO7CmArWsa/xV4qRecIiqmnCd6a7QV9KxDdCfCtv06GgXaE9oXXjBa/oasU0mSCGmcB7+EhozzhGJyZbSdaq6Vjg84h+EXg0T9NC4KeIXo/35mn6HdoCpx6Wn5rWV1KI6D2JcbmYngWO7dlI4Nie/8j0IPBsypxuTOMdJ3maXqpdl0EsJrSy2v3cUburmVCS7Rlc03gGz2R4BrOc3kuMYxsTWA6FbGIKD60mSusyX+EGCxnnfImSP+in1xr9j/R+mgXN/fSf4hMrZlhsRhXiaAAAAABJRU5ErkJggg==\n",
      "text/latex": [
       "$$\\left [ 0\\right ]$$"
      ],
      "text/plain": [
       "[0]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAHIAAAAVCAYAAACaLLqfAAAABHNCSVQICAgIfAhkiAAAAehJREFUaIHtmbtKA0EUhj/FQhRNvBQW2hjUV7AM9r6BhS/gO5hKsRAFCysNPoFgpYWshbWt0cLYKIKNt6CCxiITsq47m9nszm6O7AdhYM9w8oU/e5uBjH9HEai7Ppep2mT4Mc7vjOrNQq/P5DOgBOz41CaBPeAO+ACqwBYwEqtuPEhxDeNZo5FNCbjVNSzSSHhVUy8AD2rOIbAOnNI6e8fC/gKLSHGN4ungOiPdFAkO8ljVVzzHN9XxXQPxpJDiGsXToYMgp1Xthr+X4yHgFXgDBoOsE0KKa1RPhzb3SD8W1HgCfHtqL8A5MADMG/aziRTXWD1Ng5xT45Wmfq3GWcN+NpHiGqunaZA5NT5p6s3jecN+NpHiGqunaZDt6FGj7823y5DiGsrTNMjmvyOnqQ975qWJFNdYPU2DrKhRd72eUaPuep8kUlyteRbRv34UaP+oXCP9R3qQ4xrV0yHBBYGyqi1retoirGsZGZ5uHDoM0ructEZrOamC/3LSgaovBQjZIKyrFE83Dh0GCTAF7AP3wCeNhdttYFQz/wJ4Jp2F6jCuUjzdOEQIMgx54AvYiKmfLaR4enFoE2Rc+5GLwDswEbGPbaR4QsB+ZJ9rUpXGPleTx4hfegT0R+yRBFI8obUfmZGR0dX8AOWm3J12dwhQAAAAAElFTkSuQmCC\n",
      "text/latex": [
       "$$\\left [ 0, \\quad 0, \\quad 0\\right ]$$"
      ],
      "text/plain": [
       "[0, 0, 0]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMcAAAAVCAYAAADy8/riAAAABHNCSVQICAgIfAhkiAAAAj9JREFUeJzt2z9PFEEcxvHvUULkTrSwgMRAkLdAebH3HVjwBmypuUpDYTCxsJILr4AWCrIU1raeFmKjIaEB5CImchQ3F5Zl53b2dmfXh8yTXCbZ32TyuWR/2f8QEhKSmTYwiP2+1KoJCakmj7m93w9GhamUyYdAB3ifUpsHPgI/gUvgCNgCHpbKLScqVhUn6FjzOPsM9/cO8MO2YJth12xY6kvAsZmzC7wBDrg5yjzK+w88RsWq4gQdaxFnROzIEU+b8c2xZ+qvEtvfmu0fHOBVRcWq4gQdaxFnxATNsWhq37l7KvYA+A1cADPj1BVFxariBB1rUWdExjVHWp6bcR+4StTOgU/ANLDquJ7PqFhVnKBjLdXp2hwrZvxqqX8z4zPH9XxGxariBB1rqU7X5mia8dRSH21vOa7nMypWFSfoWEt1ujZHVhpmTL2Y+c+iYlVxgo41l9O1OUYd17TUZxPz6oyKVcUJOtZSna7N0TOj7Vxt2Yy2c70qo2JVcYKO1Zuzjf1W7hLZt8j61H8rD3SsKk7QsRZ1RlT4ELBramuWNX0lr7WLhhN0rF00nPFETNgcycfyr7l5LN8j/bH8jqm/HAPykbxWFSfoWFWc8URM2BwAC8A28Av4y/BFrXfAnGX+Z+CMel5My2NVcYKOVcUZT0SB5siTFvAP2CxpPV9RcYKOVcWZTERGc5T1PccL4A/wpOA6vqPiBB2rihPGfM/RiE16yu2LpxPSv+kICblPmQbWE9s2anCEhISEhMjnGrOpTzVk3soPAAAAAElFTkSuQmCC\n",
      "text/latex": [
       "$$\\left [ 0, \\quad 0, \\quad 0, \\quad 0, \\quad 0\\right ]$$"
      ],
      "text/plain": [
       "[0, 0, 0, 0, 0]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAARwAAAAVCAYAAACUjFGcAAAABHNCSVQICAgIfAhkiAAAAodJREFUeJzt3L1qU2Ecx/FPHSva+jI4KIhFvQXH4O4dOHgDrs7tpDiIgoOTFq/AVQeJg7Or1UFdFMHFt6KC1qGnNI05yUmTk/iD5wvhwHkOD58sf/JyEkqlUmkOdbDV83g5V02pVErtuL2zZGtn4cCAi59hDXcHrJ3EfbzHT7zFbRyZKnc6pVhTnORYU5zkWMdxbtqeIWt4V7dhx/YkWq1ZX8HH6ppHuIGndl8NHRv3GbRYijXFSY41xUmOdRJnV88rnN46hg+cx9X61b7zt6rz9xrAZ1WKNcVJjjXFSY51EmfXPgbOmWrtjX/fhh3CN3zHwWHqGZViTXGSY01xkmOd1Nk14jOcQV2sjk/wp2/tK55jERca7tdmKdYUJznWFCc51qk6mw6c89XxVc366+p4ruF+bZZiTXGSY01xkmOdqrPpwFmqjp9r1nfOLzfcr81SrClOcqwpTnKsU3U2HTijWqiOAz8c+s9KsaY4ybGmOMmxjuVsOnB2pthSzfrhvuvmWYo1xUmONcVJjnWqzqYDZ6M61r1PO1sd697nzbIUa4qTHGuKkxxra86O+q/FV4z+amzT/L/CI8ea4iTHmuIkxzqps2uGN/6tV2tXavZsq3Gt6zKc5FjXZTjJsa7LcPbWtc+B039783W7tzdvGHx788Nq/fIQUBuNa01xkmNNcZJjTXH21rXPgQOn8AAf8Mv2D7Pu4GjN9S/wxXx+iDaONcVJjjXFSY41xdlb1wQDZ5yW8Rs3p7RfW6U4ybGmOMmxpjj76xoxcHYek/4fziX8wIkJ92m7FCc51hQnOdYUJ0P+D2eh56LT9n4Y9cng/8QplUqlYS3iWt+51Tk4SqVSqVQqlWbQX9q8w/umVvG1AAAAAElFTkSuQmCC\n",
      "text/latex": [
       "$$\\left [ 0, \\quad 0, \\quad 0, \\quad 0, \\quad 0, \\quad 0, \\quad 0\\right ]$$"
      ],
      "text/plain": [
       "[0, 0, 0, 0, 0, 0, 0]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "lmax = 3\n",
    "z = sqrt(1 - x ** 2 - y ** 2)\n",
    "for l in range(lmax + 1):\n",
    "    display([simplify(Yxyz(l, m, x, y, z) - Y(l, m, x, y)) for m in range(-l, l + 1)])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "■"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/latex": [
       "$$- 26333.6451012686 x^{20} + 1053345.80405074 x^{18} y^{2} + 101283.250389495 x^{18} + 131668.225506344 x^{16} y^{4} - 4152613.26596928 x^{16} y^{2} - 153293.568157073 x^{16} - 10533458.0405074 x^{14} y^{6} + 3646197.0140218 x^{14} y^{4} + 6438329.86259706 x^{14} y^{2} + 113875.22205954 x^{14} - 17116869.3158246 x^{12} y^{8} + 36867103.141776 x^{12} y^{6} - 11956898.3162517 x^{12} y^{4} - 4896634.54856022 x^{12} y^{2} - 41409.1716580145 x^{12} - 6.23017737432091 \\cdot 10^{-12} x^{10} y^{10} + 28967009.6113954 x^{10} y^{8} - 43841960.4929228 x^{10} y^{6} + 13778901.8692043 x^{10} y^{4} + 1822003.55295264 x^{10} y^{2} + 5877.43081597624 x^{10} + 17116869.3158246 x^{8} y^{12} - 28967009.6113954 x^{8} y^{10} + 18789411.6398241 x^{8} y^{6} - 6832513.32357239 x^{8} y^{4} - 264484.386718931 x^{8} y^{2} + 10533458.0405074 x^{6} y^{14} - 36867103.141776 x^{6} y^{12} + 43841960.4929228 x^{6} y^{10} - 18789411.6398241 x^{6} y^{8} - 3.1898508156523 \\cdot 10^{-9} x^{6} y^{6} + 1234260.47135501 x^{6} y^{4} - 131668.225506344 x^{4} y^{16} - 3646197.0140218 x^{4} y^{14} + 11956898.3162517 x^{4} y^{12} - 13778901.8692043 x^{4} y^{10} + 6832513.32357239 x^{4} y^{8} - 1234260.47135501 x^{4} y^{6} - 1053345.80405074 x^{2} y^{18} + 4152613.26596928 x^{2} y^{16} - 6438329.86259706 x^{2} y^{14} + 4896634.54856022 x^{2} y^{12} - 1822003.55295264 x^{2} y^{10} + 264484.386718931 x^{2} y^{8} + 26333.6451012686 y^{20} - 101283.250389495 y^{18} + 153293.568157073 y^{16} - 113875.22205954 y^{14} + 41409.1716580145 y^{12} - 5877.43081597624 y^{10}$$"
      ],
      "text/plain": [
       "                    20                     18  2                     18       \n",
       "- 26333.6451012686⋅x   + 1053345.80405074⋅x  ⋅y  + 101283.250389495⋅x   + 1316\n",
       "\n",
       "              16  4                     16  2                     16          \n",
       "68.225506344⋅x  ⋅y  - 4152613.26596928⋅x  ⋅y  - 153293.568157073⋅x   - 1053345\n",
       "\n",
       "           14  6                    14  4                     14  2           \n",
       "8.0405074⋅x  ⋅y  + 3646197.0140218⋅x  ⋅y  + 6438329.86259706⋅x  ⋅y  + 113875.2\n",
       "\n",
       "         14                     12  8                    12  6                \n",
       "2205954⋅x   - 17116869.3158246⋅x  ⋅y  + 36867103.141776⋅x  ⋅y  - 11956898.3162\n",
       "\n",
       "     12  4                     12  2                     12                   \n",
       "517⋅x  ⋅y  - 4896634.54856022⋅x  ⋅y  - 41409.1716580145⋅x   - 6.23017737432091\n",
       "\n",
       "      10  10                     10  8                     10  6              \n",
       "e-12⋅x  ⋅y   + 28967009.6113954⋅x  ⋅y  - 43841960.4929228⋅x  ⋅y  + 13778901.86\n",
       "\n",
       "       10  4                     10  2                     10                 \n",
       "92043⋅x  ⋅y  + 1822003.55295264⋅x  ⋅y  + 5877.43081597624⋅x   + 17116869.31582\n",
       "\n",
       "    8  12                     8  10                     8  6                  \n",
       "46⋅x ⋅y   - 28967009.6113954⋅x ⋅y   + 18789411.6398241⋅x ⋅y  - 6832513.3235723\n",
       "\n",
       "   8  4                     8  2                     6  14                    \n",
       "9⋅x ⋅y  - 264484.386718931⋅x ⋅y  + 10533458.0405074⋅x ⋅y   - 36867103.141776⋅x\n",
       "\n",
       "6  12                     6  10                     6  8                      \n",
       " ⋅y   + 43841960.4929228⋅x ⋅y   - 18789411.6398241⋅x ⋅y  - 3.1898508156523e-9⋅\n",
       "\n",
       " 6  6                     6  4                     4  16                    4 \n",
       "x ⋅y  + 1234260.47135501⋅x ⋅y  - 131668.225506344⋅x ⋅y   - 3646197.0140218⋅x ⋅\n",
       "\n",
       " 14                     4  12                     4  10                     4 \n",
       "y   + 11956898.3162517⋅x ⋅y   - 13778901.8692043⋅x ⋅y   + 6832513.32357239⋅x ⋅\n",
       "\n",
       " 8                     4  6                     2  18                     2  1\n",
       "y  - 1234260.47135501⋅x ⋅y  - 1053345.80405074⋅x ⋅y   + 4152613.26596928⋅x ⋅y \n",
       "\n",
       "6                     2  14                     2  12                     2  1\n",
       "  - 6438329.86259706⋅x ⋅y   + 4896634.54856022⋅x ⋅y   - 1822003.55295264⋅x ⋅y \n",
       "\n",
       "0                     2  8                     20                     18      \n",
       "  + 264484.386718931⋅x ⋅y  + 26333.6451012686⋅y   - 101283.250389495⋅y   + 153\n",
       "\n",
       "               16                    14                     12                \n",
       "293.568157073⋅y   - 113875.22205954⋅y   + 41409.1716580145⋅y   - 5877.43081597\n",
       "\n",
       "     10\n",
       "624⋅y  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "N(Y(20, 10, x, y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
