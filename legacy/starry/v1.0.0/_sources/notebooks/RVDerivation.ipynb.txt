{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Derivation of the radial velocity field expansion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "tags": [
     "hide_input"
    ]
   },
   "outputs": [],
   "source": [
    "%run notebook_setup.py"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this notebook, we'll derive how to express the radial velocity field of a star at an arbitrary orientation on the sky in terms of spherical harmonics. This allows us to use `starry` to model the Rossiter-McLaughlin waveform **analytically**!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, let's import some stuff. We'll use `sympy` for the derivations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using sympy version 1.5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from IPython.display import display, Math\n",
    "import sympy\n",
    "from sympy import *\n",
    "from sympy.functions.special.tensor_functions import KroneckerDelta\n",
    "\n",
    "print(\"Using sympy version\", sympy.__version__)\n",
    "\n",
    "# Initialize the session\n",
    "init_session(quiet=True)\n",
    "\n",
    "# Define our symbols\n",
    "x, y, z, mu, nu, l, m, j, k, p, q, n, A, B, C, alpha, omeq = symbols(\n",
    "    \"x y z mu nu l m j k p q n A B C alpha \\omega_{eq}\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The radial velocity field of a star"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The polynomial describing the radial component of the velocity field on the projected disk of a star is given by ([Short et al. 2018](https://arxiv.org/abs/1810.09565))\n",
    "\n",
    "$f(\\mathbf{x}, \\mathbf{y}, \\mathbf{z}) = \\omega_{eq}(A\\mathbf{x} + B\\mathbf{y})(1 - \\alpha(-B\\mathbf{x} + A\\mathbf{y} + C\\mathbf{z})^2)$\n",
    "\n",
    "where \n",
    "\n",
    "$A = \\sin(i)\\cos(\\lambda)$\n",
    "\n",
    "$B = \\sin(i)\\sin(\\lambda)$\n",
    "\n",
    "$C = \\cos(i)$\n",
    "\n",
    "and $i$ and $\\lambda$ are the stellar inclination and obliquity, respectively. The constant $\\alpha$ is the shear due to differential rotation. We are assuming a simple linear shear according to the following equation:\n",
    "\n",
    "$\\omega = \\omega_{eq}(1 - \\alpha \\sin^2\\theta)$,\n",
    "\n",
    "where $\\omega$ is the angular rotational velocity at a point on the surface, $\\omega_{eq}$ is the velocity at the equator, and $\\theta$ is the polar angle (latitude)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Let's expand this function"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we expand all the products in $f$, we can write it as a dot product of a polynomial coefficient vector and the polynomial basis defined in Luger et al. (2018):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def poly_basis(n, x, y):\n",
    "    \"\"\"Return the n^th term in the polynomial basis.\"\"\"\n",
    "    l = Rational(floor(sqrt(n)))\n",
    "    m = Rational(n - l * l - l)\n",
    "    mu = Rational(l - m)\n",
    "    nu = Rational(l + m)\n",
    "    if nu % 2 == 0:\n",
    "        i = Rational(mu, 2)\n",
    "        j = Rational(nu, 2)\n",
    "        k = Rational(0)\n",
    "    else:\n",
    "        i = Rational(mu - 1, 2)\n",
    "        j = Rational(nu - 1, 2)\n",
    "        k = Rational(1)\n",
    "    return x ** i * y ** j * sqrt(1 - x ** 2 - y ** 2) ** k\n",
    "\n",
    "\n",
    "# Compute the polynomial basis\n",
    "basis = Matrix([poly_basis(n, x, y) for n in range(16)]).T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here's what the polynomial basis looks like (recall that $z = \\sqrt{1 - x^2 - y^2}$):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$\\displaystyle \\left[\\begin{array}{cccccccccccccccc}1 & x & \\sqrt{- x^{2} - y^{2} + 1} & y & x^{2} & x \\sqrt{- x^{2} - y^{2} + 1} & x y & y \\sqrt{- x^{2} - y^{2} + 1} & y^{2} & x^{3} & x^{2} \\sqrt{- x^{2} - y^{2} + 1} & x^{2} y & x y \\sqrt{- x^{2} - y^{2} + 1} & x y^{2} & y^{2} \\sqrt{- x^{2} - y^{2} + 1} & y^{3}\\end{array}\\right]$"
      ],
      "text/plain": [
       "⎡         _______________              _______________            ____________\n",
       "⎢        ╱    2    2           2      ╱    2    2                ╱    2    2  \n",
       "⎣1  x  ╲╱  - x  - y  + 1   y  x   x⋅╲╱  - x  - y  + 1   x⋅y  y⋅╲╱  - x  - y  +\n",
       "\n",
       "___                _______________               _______________              \n",
       "      2   3   2   ╱    2    2        2          ╱    2    2          2   2   ╱\n",
       " 1   y   x   x ⋅╲╱  - x  - y  + 1   x ⋅y  x⋅y⋅╲╱  - x  - y  + 1   x⋅y   y ⋅╲╱ \n",
       "\n",
       "_______________    ⎤\n",
       "    2    2        3⎥\n",
       " - x  - y  + 1   y ⎦"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "basis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And here's the function we wish to express:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/latex": [
       "$\\displaystyle \\omega_{eq} \\left(A x + B y\\right) \\left(- \\alpha \\left(A y - B x + C \\sqrt{- x^{2} - y^{2} + 1}\\right)^{2} + 1\\right)$"
      ],
      "text/plain": [
       "                        ⎛                                      2    ⎞\n",
       "                        ⎜    ⎛                 _______________⎞     ⎟\n",
       "                        ⎜    ⎜                ╱    2    2     ⎟     ⎟\n",
       "\\omega_{eq}⋅(A⋅x + B⋅y)⋅⎝- α⋅⎝A⋅y - B⋅x + C⋅╲╱  - x  - y  + 1 ⎠  + 1⎠"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f = (\n",
    "    omeq\n",
    "    * (A * x + B * y)\n",
    "    * (1 - alpha * (-B * x + A * y + C * sqrt(1 - x ** 2 - y ** 2)) ** 2)\n",
    ")\n",
    "f"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can use `sympy` to figure out the (exact) representation of `f` in the polynomial basis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$\\displaystyle \\left[\\begin{matrix}0\\\\- A C^{2} \\omega_{eq} \\alpha + A \\omega_{eq}\\\\0\\\\- B C^{2} \\omega_{eq} \\alpha + B \\omega_{eq}\\\\0\\\\0\\\\0\\\\0\\\\0\\\\- A B^{2} \\omega_{eq} \\alpha + A C^{2} \\omega_{eq} \\alpha\\\\2 A B C \\omega_{eq} \\alpha\\\\2 A^{2} B \\omega_{eq} \\alpha - B^{3} \\omega_{eq} \\alpha + B C^{2} \\omega_{eq} \\alpha\\\\- 2 A^{2} C \\omega_{eq} \\alpha + 2 B^{2} C \\omega_{eq} \\alpha\\\\- A^{3} \\omega_{eq} \\alpha + 2 A B^{2} \\omega_{eq} \\alpha + A C^{2} \\omega_{eq} \\alpha\\\\- 2 A B C \\omega_{eq} \\alpha\\\\- A^{2} B \\omega_{eq} \\alpha + B C^{2} \\omega_{eq} \\alpha\\end{matrix}\\right]$"
      ],
      "text/plain": [
       "⎡                              0                               ⎤\n",
       "⎢                                                              ⎥\n",
       "⎢                  2                                           ⎥\n",
       "⎢             - A⋅C ⋅\\omega_{eq}⋅α + A⋅\\omega_{eq}             ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                              0                               ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                  2                                           ⎥\n",
       "⎢             - B⋅C ⋅\\omega_{eq}⋅α + B⋅\\omega_{eq}             ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                              0                               ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                              0                               ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                              0                               ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                              0                               ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                              0                               ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢               2                    2                         ⎥\n",
       "⎢          - A⋅B ⋅\\omega_{eq}⋅α + A⋅C ⋅\\omega_{eq}⋅α           ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                    2⋅A⋅B⋅C⋅\\omega_{eq}⋅α                     ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢    2                    3                    2               ⎥\n",
       "⎢ 2⋅A ⋅B⋅\\omega_{eq}⋅α - B ⋅\\omega_{eq}⋅α + B⋅C ⋅\\omega_{eq}⋅α ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢             2                      2                         ⎥\n",
       "⎢        - 2⋅A ⋅C⋅\\omega_{eq}⋅α + 2⋅B ⋅C⋅\\omega_{eq}⋅α         ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢   3                      2                    2              ⎥\n",
       "⎢- A ⋅\\omega_{eq}⋅α + 2⋅A⋅B ⋅\\omega_{eq}⋅α + A⋅C ⋅\\omega_{eq}⋅α⎥\n",
       "⎢                                                              ⎥\n",
       "⎢                    -2⋅A⋅B⋅C⋅\\omega_{eq}⋅α                    ⎥\n",
       "⎢                                                              ⎥\n",
       "⎢             2                      2                         ⎥\n",
       "⎣          - A ⋅B⋅\\omega_{eq}⋅α + B⋅C ⋅\\omega_{eq}⋅α           ⎦"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def Coefficient(expression, term):\n",
    "    \"\"\"Return the coefficient multiplying `term` in `expression`.\"\"\"\n",
    "    # Get the coefficient\n",
    "    coeff = expression.coeff(term)\n",
    "    # Set any non-constants in this coefficient to zero. If the coefficient\n",
    "    # is not a constant, this is not the term we are interested in!\n",
    "    coeff = coeff.subs(sqrt(1 - x ** 2 - y ** 2), 0).subs(x, 0).subs(y, 0)\n",
    "    return coeff\n",
    "\n",
    "\n",
    "vec = Matrix([Coefficient(expand(f), term) for term in basis])\n",
    "vec"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can check that dotting this vector with the polynomial basis yields the original function $f$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "simplify(factor(basis.dot(vec)) - f) == 0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Now let's represent it in terms of spherical harmonics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have the vector of polynomial coefficients `vec`, we want to apply a change-of-basis transformation to figure out their (exact) representation in terms of spherical harmonics.\n",
    "\n",
    "As in Luger et al. (2018), let's compute the change of basis matrix from polynomials to spherical harmonic coefficients. This is the inverse of the $A_1$ matrix introduced in Luger et al. (2018). Note that it includes the normalization of $\\frac{2}{\\sqrt{\\pi}}$ used internally by `starry`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def SA(l, m):\n",
    "    \"\"\"A spherical harmonic normalization constant.\"\"\"\n",
    "    return sqrt(\n",
    "        (2 - KroneckerDelta(m, 0))\n",
    "        * (2 * l + 1)\n",
    "        * factorial(l - m)\n",
    "        / (4 * pi * factorial(l + m))\n",
    "    )\n",
    "\n",
    "\n",
    "def SB(l, m, j, k):\n",
    "    \"\"\"Another spherical harmonic normalization constant.\"\"\"\n",
    "    try:\n",
    "        ratio = factorial(Rational(l + m + k - 1, 2)) / factorial(\n",
    "            Rational(-l + m + k - 1, 2)\n",
    "        )\n",
    "    except ValueError:\n",
    "        ratio = 0\n",
    "    res = (\n",
    "        2 ** l\n",
    "        * Rational(\n",
    "            factorial(m),\n",
    "            (factorial(j) * factorial(k) * factorial(m - j) * factorial(l - m - k)),\n",
    "        )\n",
    "        * ratio\n",
    "    )\n",
    "    return simplify(res)\n",
    "\n",
    "\n",
    "def SC(p, q, k):\n",
    "    \"\"\"Return the binomial theorem coefficient `C`.\"\"\"\n",
    "    res = factorial(Rational(k, 2)) / (\n",
    "        factorial(Rational(q, 2))\n",
    "        * factorial(Rational(k - p, 2))\n",
    "        * factorial(Rational(p - q, 2))\n",
    "    )\n",
    "    return simplify(res)\n",
    "\n",
    "\n",
    "def Y(l, m, x, y):\n",
    "    \"\"\"Return the spherical harmonic of degree `l` and order `m`.\"\"\"\n",
    "    res = 0\n",
    "    z = sqrt(1 - x ** 2 - y ** 2)\n",
    "    if m >= 0:\n",
    "        for j in range(0, m + 1, 2):\n",
    "            for k in range(0, l - m + 1, 2):\n",
    "                for p in range(0, k + 1, 2):\n",
    "                    for q in range(0, p + 1, 2):\n",
    "                        res += (\n",
    "                            (-1) ** ((j + p) // 2)\n",
    "                            * SA(l, m)\n",
    "                            * SB(l, m, j, k)\n",
    "                            * SC(p, q, k)\n",
    "                            * x ** (m - j + p - q)\n",
    "                            * y ** (j + q)\n",
    "                        )\n",
    "            for k in range(1, l - m + 1, 2):\n",
    "                for p in range(0, k, 2):\n",
    "                    for q in range(0, p + 1, 2):\n",
    "                        res += (\n",
    "                            (-1) ** ((j + p) // 2)\n",
    "                            * SA(l, m)\n",
    "                            * SB(l, m, j, k)\n",
    "                            * SC(p, q, k - 1)\n",
    "                            * x ** (m - j + p - q)\n",
    "                            * y ** (j + q)\n",
    "                            * z\n",
    "                        )\n",
    "    else:\n",
    "        for j in range(1, abs(m) + 1, 2):\n",
    "            for k in range(0, l - abs(m) + 1, 2):\n",
    "                for p in range(0, k + 1, 2):\n",
    "                    for q in range(0, p + 1, 2):\n",
    "                        res += (\n",
    "                            (-1) ** ((j + p - 1) // 2)\n",
    "                            * SA(l, abs(m))\n",
    "                            * SB(l, abs(m), j, k)\n",
    "                            * SC(p, q, k)\n",
    "                            * x ** (abs(m) - j + p - q)\n",
    "                            * y ** (j + q)\n",
    "                        )\n",
    "            for k in range(1, l - abs(m) + 1, 2):\n",
    "                for p in range(0, k, 2):\n",
    "                    for q in range(0, p + 1, 2):\n",
    "                        res += (\n",
    "                            (-1) ** ((j + p - 1) // 2)\n",
    "                            * SA(l, abs(m))\n",
    "                            * SB(l, abs(m), j, k)\n",
    "                            * SC(p, q, k - 1)\n",
    "                            * x ** (abs(m) - j + p - q)\n",
    "                            * y ** (j + q)\n",
    "                            * z\n",
    "                        )\n",
    "\n",
    "    return res\n",
    "\n",
    "\n",
    "def p_Y(l, m, lmax):\n",
    "    \"\"\"Return the polynomial basis representation of the spherical harmonic `Y_{lm}`.\"\"\"\n",
    "    ylm = Y(l, m, x, y)\n",
    "    res = [ylm.subs(sqrt(1 - x ** 2 - y ** 2), 0).subs(x, 0).subs(y, 0)]\n",
    "    for n in range(1, (lmax + 1) ** 2):\n",
    "        res.append(Coefficient(ylm, poly_basis(n, x, y)))\n",
    "    return res\n",
    "\n",
    "\n",
    "def A1(lmax, norm=2 / sqrt(pi)):\n",
    "    \"\"\"Return the change of basis matrix A1. The columns of this matrix are given by `p_Y`.\"\"\"\n",
    "    res = zeros((lmax + 1) ** 2, (lmax + 1) ** 2)\n",
    "    n = 0\n",
    "    for l in range(lmax + 1):\n",
    "        for m in range(-l, l + 1):\n",
    "            res[n] = p_Y(l, m, lmax)\n",
    "            n += 1\n",
    "    return res * norm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now evaluate the change of basis matrix from spherical harmonic coefficients to polynomials, $A_1$ for $l_\\mathrm{max} = 3$. We then take the inverse to go from polynomial coeffiecients to $Y_{lm}$ coefficients:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$\\displaystyle \\left[\\begin{array}{cccccccccccccccc}\\pi & 0 & 0 & 0 & \\frac{\\pi}{3} & 0 & 0 & 0 & \\frac{\\pi}{3} & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\0 & 0 & 0 & \\frac{\\sqrt{3} \\pi}{3} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{3} \\pi}{15} & 0 & 0 & 0 & \\frac{\\sqrt{3} \\pi}{5}\\\\0 & 0 & \\frac{\\sqrt{3} \\pi}{3} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{3} \\pi}{15} & 0 & 0 & 0 & \\frac{\\sqrt{3} \\pi}{15} & 0\\\\0 & \\frac{\\sqrt{3} \\pi}{3} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{3} \\pi}{5} & 0 & 0 & 0 & \\frac{\\sqrt{3} \\pi}{15} & 0 & 0\\\\0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{15} \\pi}{15} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{15} \\pi}{15} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\0 & 0 & 0 & 0 & - \\frac{\\sqrt{5} \\pi}{15} & 0 & 0 & 0 & - \\frac{\\sqrt{5} \\pi}{15} & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{15} \\pi}{15} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\0 & 0 & 0 & 0 & \\frac{\\sqrt{15} \\pi}{15} & 0 & 0 & 0 & - \\frac{\\sqrt{15} \\pi}{15} & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{70} \\pi}{70} & 0 & 0 & 0 & - \\frac{\\sqrt{70} \\pi}{70}\\\\0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{105} \\pi}{105} & 0 & 0 & 0\\\\0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & - \\frac{\\sqrt{42} \\pi}{210} & 0 & 0 & 0 & - \\frac{\\sqrt{42} \\pi}{70}\\\\0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & - \\frac{\\sqrt{7} \\pi}{35} & 0 & 0 & 0 & - \\frac{\\sqrt{7} \\pi}{35} & 0\\\\0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & - \\frac{\\sqrt{42} \\pi}{70} & 0 & 0 & 0 & - \\frac{\\sqrt{42} \\pi}{210} & 0 & 0\\\\0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{105} \\pi}{105} & 0 & 0 & 0 & - \\frac{\\sqrt{105} \\pi}{105} & 0\\\\0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\sqrt{70} \\pi}{70} & 0 & 0 & 0 & - \\frac{\\sqrt{70} \\pi}{70} & 0 & 0\\end{array}\\right]$"
      ],
      "text/plain": [
       "⎡                       π                             π                       \n",
       "⎢π   0     0     0      ─       0      0      0       ─        0       0      \n",
       "⎢                       3                             3                       \n",
       "⎢                                                                             \n",
       "⎢               √3⋅π                                                          \n",
       "⎢0   0     0    ────    0       0      0      0       0        0       0      \n",
       "⎢                3                                                            \n",
       "⎢                                                                             \n",
       "⎢         √3⋅π                                                        √3⋅π    \n",
       "⎢0   0    ────   0      0       0      0      0       0        0      ────    \n",
       "⎢          3                                                           15     \n",
       "⎢                                                                             \n",
       "⎢   √3⋅π                                                     √3⋅π             \n",
       "⎢0  ────   0     0      0       0      0      0       0      ────      0      \n",
       "⎢    3                                                        5               \n",
       "⎢                                                                             \n",
       "⎢                                    √15⋅π                                    \n",
       "⎢0   0     0     0      0       0    ─────    0       0        0       0      \n",
       "⎢                                      15                                     \n",
       "⎢                                                                             \n",
       "⎢                                           √15⋅π                             \n",
       "⎢0   0     0     0      0       0      0    ─────     0        0       0      \n",
       "⎢                                             15                              \n",
       "⎢                                                                             \n",
       "⎢                     -√5⋅π                        -√5⋅π                      \n",
       "⎢0   0     0     0    ──────    0      0      0    ──────      0       0      \n",
       "⎢                       15                           15                       \n",
       "⎢                                                                             \n",
       "⎢                             √15⋅π                                           \n",
       "⎢0   0     0     0      0     ─────    0      0       0        0       0      \n",
       "⎢                               15                                            \n",
       "⎢                                                                             \n",
       "⎢                     √15⋅π                        -√15⋅π                     \n",
       "⎢0   0     0     0    ─────     0      0      0    ───────     0       0      \n",
       "⎢                       15                            15                      \n",
       "⎢                                                                             \n",
       "⎢                                                                             \n",
       "⎢0   0     0     0      0       0      0      0       0        0       0      \n",
       "⎢                                                                             \n",
       "⎢                                                                             \n",
       "⎢                                                                             \n",
       "⎢0   0     0     0      0       0      0      0       0        0       0      \n",
       "⎢                                                                             \n",
       "⎢                                                                             \n",
       "⎢                                                                            -\n",
       "⎢0   0     0     0      0       0      0      0       0        0       0     ─\n",
       "⎢                                                                             \n",
       "⎢                                                                             \n",
       "⎢                                                                    -√7⋅π    \n",
       "⎢0   0     0     0      0       0      0      0       0        0     ──────   \n",
       "⎢                                                                      35     \n",
       "⎢                                                                             \n",
       "⎢                                                           -√42⋅π            \n",
       "⎢0   0     0     0      0       0      0      0       0     ───────    0      \n",
       "⎢                                                              70             \n",
       "⎢                                                                             \n",
       "⎢                                                                    √105⋅π   \n",
       "⎢0   0     0     0      0       0      0      0       0        0     ──────   \n",
       "⎢                                                                     105     \n",
       "⎢                                                                             \n",
       "⎢                                                            √70⋅π            \n",
       "⎢0   0     0     0      0       0      0      0       0      ─────     0      \n",
       "⎣                                                              70             \n",
       "\n",
       "                                          ⎤\n",
       "  0       0        0        0         0   ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "√3⋅π                                √3⋅π  ⎥\n",
       "────      0        0        0       ────  ⎥\n",
       " 15                                  5    ⎥\n",
       "                                          ⎥\n",
       "                           √3⋅π           ⎥\n",
       "  0       0        0       ────       0   ⎥\n",
       "                            15            ⎥\n",
       "                                          ⎥\n",
       "                 √3⋅π                     ⎥\n",
       "  0       0      ────       0         0   ⎥\n",
       "                  15                      ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "  0       0        0        0         0   ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "  0       0        0        0         0   ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "  0       0        0        0         0   ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "  0       0        0        0         0   ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "  0       0        0        0         0   ⎥\n",
       "                                          ⎥\n",
       "                                          ⎥\n",
       "√70⋅π                              -√70⋅π ⎥\n",
       "─────     0        0        0      ───────⎥\n",
       "  70                                  70  ⎥\n",
       "                                          ⎥\n",
       "        √105⋅π                            ⎥\n",
       "  0     ──────     0        0         0   ⎥\n",
       "         105                              ⎥\n",
       "                                          ⎥\n",
       "√42⋅π                              -√42⋅π ⎥\n",
       "──────    0        0        0      ───────⎥\n",
       " 210                                  70  ⎥\n",
       "                                          ⎥\n",
       "                          -√7⋅π           ⎥\n",
       "  0       0        0      ──────      0   ⎥\n",
       "                            35            ⎥\n",
       "                                          ⎥\n",
       "                -√42⋅π                    ⎥\n",
       "  0       0     ───────     0         0   ⎥\n",
       "                  210                     ⎥\n",
       "                                          ⎥\n",
       "                         -√105⋅π          ⎥\n",
       "  0       0        0     ────────     0   ⎥\n",
       "                           105            ⎥\n",
       "                                          ⎥\n",
       "                -√70⋅π                    ⎥\n",
       "  0       0     ───────     0         0   ⎥\n",
       "                   70                     ⎦"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "M = Matrix(A1(3)).inv()\n",
    "M"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The end result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can finally compute the spherical harmonic coefficients of the function $f$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$\\displaystyle \\left[\\begin{matrix}0\\\\\\frac{\\sqrt{3} \\pi B \\omega_{eq} \\left(- A^{2} \\alpha - B^{2} \\alpha - C^{2} \\alpha + 5\\right)}{15}\\\\0\\\\\\frac{\\sqrt{3} \\pi A \\omega_{eq} \\left(- A^{2} \\alpha - B^{2} \\alpha - C^{2} \\alpha + 5\\right)}{15}\\\\0\\\\0\\\\0\\\\0\\\\0\\\\\\frac{\\sqrt{70} \\pi B \\omega_{eq} \\alpha \\left(3 A^{2} - B^{2}\\right)}{70}\\\\\\frac{2 \\sqrt{105} \\pi C \\omega_{eq} \\alpha \\left(- A^{2} + B^{2}\\right)}{105}\\\\\\frac{\\sqrt{42} \\pi B \\omega_{eq} \\alpha \\left(A^{2} + B^{2} - 4 C^{2}\\right)}{210}\\\\0\\\\\\frac{\\sqrt{42} \\pi A \\omega_{eq} \\alpha \\left(A^{2} + B^{2} - 4 C^{2}\\right)}{210}\\\\\\frac{4 \\sqrt{105} \\pi A B C \\omega_{eq} \\alpha}{105}\\\\\\frac{\\sqrt{70} \\pi A \\omega_{eq} \\alpha \\left(A^{2} - 3 B^{2}\\right)}{70}\\end{matrix}\\right]$"
      ],
      "text/plain": [
       "⎡                      0                      ⎤\n",
       "⎢                                             ⎥\n",
       "⎢                   ⎛   2      2      2      ⎞⎥\n",
       "⎢√3⋅π⋅B⋅\\omega_{eq}⋅⎝- A ⋅α - B ⋅α - C ⋅α + 5⎠⎥\n",
       "⎢─────────────────────────────────────────────⎥\n",
       "⎢                      15                     ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                      0                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                   ⎛   2      2      2      ⎞⎥\n",
       "⎢√3⋅π⋅A⋅\\omega_{eq}⋅⎝- A ⋅α - B ⋅α - C ⋅α + 5⎠⎥\n",
       "⎢─────────────────────────────────────────────⎥\n",
       "⎢                      15                     ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                      0                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                      0                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                      0                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                      0                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                      0                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                            ⎛   2    2⎞      ⎥\n",
       "⎢      √70⋅π⋅B⋅\\omega_{eq}⋅α⋅⎝3⋅A  - B ⎠      ⎥\n",
       "⎢      ─────────────────────────────────      ⎥\n",
       "⎢                      70                     ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                             ⎛   2    2⎞     ⎥\n",
       "⎢    2⋅√105⋅π⋅C⋅\\omega_{eq}⋅α⋅⎝- A  + B ⎠     ⎥\n",
       "⎢    ────────────────────────────────────     ⎥\n",
       "⎢                    105                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                         ⎛ 2    2      2⎞    ⎥\n",
       "⎢   √42⋅π⋅B⋅\\omega_{eq}⋅α⋅⎝A  + B  - 4⋅C ⎠    ⎥\n",
       "⎢   ──────────────────────────────────────    ⎥\n",
       "⎢                    210                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                      0                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                         ⎛ 2    2      2⎞    ⎥\n",
       "⎢   √42⋅π⋅A⋅\\omega_{eq}⋅α⋅⎝A  + B  - 4⋅C ⎠    ⎥\n",
       "⎢   ──────────────────────────────────────    ⎥\n",
       "⎢                    210                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢        4⋅√105⋅π⋅A⋅B⋅C⋅\\omega_{eq}⋅α         ⎥\n",
       "⎢        ────────────────────────────         ⎥\n",
       "⎢                    105                      ⎥\n",
       "⎢                                             ⎥\n",
       "⎢                            ⎛ 2      2⎞      ⎥\n",
       "⎢      √70⋅π⋅A⋅\\omega_{eq}⋅α⋅⎝A  - 3⋅B ⎠      ⎥\n",
       "⎢      ─────────────────────────────────      ⎥\n",
       "⎣                      70                     ⎦"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ycoeffs = simplify(M * vec)\n",
    "ycoeffs"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that this is the **exact** spherical harmonic representation of the function `f`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Interactive visualization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Below you can interactively see how different velocity profiles affect the Rossiter-McLaughlin waveform. We coded up a simple Jupyter widget to visualize the RM effect with `starry`. Try to find the parameters that best fit the measured RV data for the hot jupiter host HD 189733!"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. note::\n",
    "   Please load the notebook to enable interactivity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "tags": [
     "hide_input",
     "hide_output"
    ]
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "62fc3e157bda48c78b26ce6a96064ebe",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(FloatSlider(value=5.0, continuous_update=False, description='$v_\\\\mathrm{eq}$ [km / s]:'…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from ipywidgets import interact, interactive, fixed, interact_manual\n",
    "import ipywidgets as widgets\n",
    "from ipywidgets import Layout\n",
    "import matplotlib.pyplot as plt\n",
    "import starry\n",
    "\n",
    "starry.config.lazy = False\n",
    "starry.config.quiet = True\n",
    "\n",
    "vslider = widgets.FloatSlider(\n",
    "    value=5.0,\n",
    "    min=0.1,\n",
    "    max=10.0,\n",
    "    step=0.01,\n",
    "    description=r\"$v_\\mathrm{eq}$ [km / s]:\",\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation=\"horizontal\",\n",
    "    readout=True,\n",
    "    readout_format=\".2f\",\n",
    "    layout=Layout(width=\"40%\"),\n",
    ")\n",
    "\n",
    "oslider = widgets.FloatSlider(\n",
    "    value=-0.50,\n",
    "    min=-90,\n",
    "    max=90.0,\n",
    "    step=0.1,\n",
    "    description=r\"$\\lambda$ [deg]:\",\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation=\"horizontal\",\n",
    "    readout=True,\n",
    "    readout_format=\".1f\",\n",
    "    layout=Layout(width=\"40%\"),\n",
    ")\n",
    "\n",
    "islider = widgets.FloatSlider(\n",
    "    value=80,\n",
    "    min=1,\n",
    "    max=179.0,\n",
    "    step=0.1,\n",
    "    description=r\"$i$ [deg]:\",\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation=\"horizontal\",\n",
    "    readout=True,\n",
    "    readout_format=\".1f\",\n",
    "    layout=Layout(width=\"40%\"),\n",
    ")\n",
    "\n",
    "aslider = widgets.FloatSlider(\n",
    "    value=0.65,\n",
    "    min=0,\n",
    "    max=1.0,\n",
    "    step=0.01,\n",
    "    description=r\"$\\alpha$:\",\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation=\"horizontal\",\n",
    "    readout=True,\n",
    "    readout_format=\".2f\",\n",
    "    layout=Layout(width=\"40%\"),\n",
    ")\n",
    "\n",
    "u1slider = widgets.FloatSlider(\n",
    "    value=1.50,\n",
    "    min=0.0,\n",
    "    max=2.0,\n",
    "    step=0.01,\n",
    "    description=r\"$u_1$:\",\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation=\"horizontal\",\n",
    "    readout=True,\n",
    "    readout_format=\".2f\",\n",
    "    layout=Layout(width=\"40%\"),\n",
    ")\n",
    "\n",
    "u2slider = widgets.FloatSlider(\n",
    "    value=-0.54,\n",
    "    min=-1.0,\n",
    "    max=1.0,\n",
    "    step=0.01,\n",
    "    description=r\"$u_2$:\",\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation=\"horizontal\",\n",
    "    readout=True,\n",
    "    readout_format=\".2f\",\n",
    "    layout=Layout(width=\"40%\"),\n",
    ")\n",
    "\n",
    "yslider = widgets.FloatSlider(\n",
    "    value=-0.66,\n",
    "    min=-1.0,\n",
    "    max=1.0,\n",
    "    step=0.01,\n",
    "    description=r\"$b$:\",\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation=\"horizontal\",\n",
    "    readout=True,\n",
    "    readout_format=\".2f\",\n",
    "    layout=Layout(width=\"40%\"),\n",
    ")\n",
    "\n",
    "rslider = widgets.FloatSlider(\n",
    "    value=0.158,\n",
    "    min=0.01,\n",
    "    max=0.5,\n",
    "    step=0.001,\n",
    "    description=r\"$r / R_\\star$:\",\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation=\"horizontal\",\n",
    "    readout=True,\n",
    "    readout_format=\".3f\",\n",
    "    layout=Layout(width=\"40%\"),\n",
    ")\n",
    "\n",
    "\n",
    "# RV data for HD 189733 from M. Bedell, corrected for the baseline\n",
    "xo_189, rv_189 = np.array(\n",
    "    [\n",
    "        (-1.610613874961608571e00, -9.981225587125663878e-01),\n",
    "        (-1.516819480458127867e00, -9.714511071633751271e-01),\n",
    "        (-1.424288949323776032e00, 6.320045379397924989e-01),\n",
    "        (-1.327854659861453346e00, 5.854148371854535071e-01),\n",
    "        (-1.232414426212717684e00, -1.336544425081228837e00),\n",
    "        (-1.135673041276108242e00, 8.028719313260808121e-01),\n",
    "        (-1.039663090115350963e00, -7.792463171881536255e-01),\n",
    "        (-9.455579835532572641e-01, 1.453737600349995773e00),\n",
    "        (-8.467048139722169742e-01, 4.792210501625959296e00),\n",
    "        (-7.477458584637551864e-01, 1.599068367822837899e01),\n",
    "        (-6.553772659628724906e-01, 2.568976397998631001e01),\n",
    "        (-5.591570578315693263e-01, 3.354680499304413388e01),\n",
    "        (-4.625798890680289377e-01, 3.502869252636628516e01),\n",
    "        (-3.650748292997558764e-01, 3.120010282560906489e01),\n",
    "        (-2.704380165973445105e-01, 2.425808674314976088e01),\n",
    "        (-1.722747673202078555e-01, 1.747718457640439738e01),\n",
    "        (-7.671271240261887114e-02, 7.868697041703853756e00),\n",
    "        (1.885820039767528364e-02, -1.486790492997897672e00),\n",
    "        (1.155924921815155992e-01, -1.257290268435099279e01),\n",
    "        (2.120216221213046814e-01, -2.145286194661639456e01),\n",
    "        (3.092993853335966881e-01, -2.891529266112229379e01),\n",
    "        (4.068310542953758047e-01, -3.485288236187807343e01),\n",
    "        (5.022774536703960013e-01, -3.813336989657727827e01),\n",
    "        (5.965030311267133234e-01, -3.469222671746319975e01),\n",
    "        (6.955993594669751534e-01, -2.537275959802173020e01),\n",
    "        (7.890948706217063569e-01, -1.200930395291834429e01),\n",
    "        (8.859815670714117353e-01, -4.065734667423384963e00),\n",
    "        (9.792870073717533375e-01, -1.655279022319518845e00),\n",
    "        (1.078846540640843621e00, -2.328277573282321100e00),\n",
    "        (1.172781349728483358e00, -1.592293655745379510e00),\n",
    "        (1.266294524861562687e00, -8.531562584666971816e-01),\n",
    "        (1.367439231357534979e00, -7.712511936460941797e-01),\n",
    "        (1.658284285150540383e00, -1.439270159869920462e00),\n",
    "        (1.761221193029112841e00, -1.678779727093569818e00),\n",
    "        (1.853084956802548033e00, -2.067330139152545598e00),\n",
    "        (1.948154374912242304e00, -1.369754796494817128e00),\n",
    "        (2.037885209964362065e00, 1.118637971248972462e00),\n",
    "        (2.137297896820141041e00, -5.354630210913455812e-01),\n",
    "        (2.226274259361801011e00, 1.665095065392961260e00),\n",
    "        (2.322326451882745779e00, 1.192561909507276141e00),\n",
    "    ]\n",
    ").T\n",
    "\n",
    "# Create the global starry maps\n",
    "map = starry.Map(ydeg=0, udeg=2, rv=True)\n",
    "\n",
    "# Force compile some functions\n",
    "map.rv()\n",
    "map.render()\n",
    "\n",
    "\n",
    "def visualize_func(veq=1, inc=90, obl=0, alpha=0, u1=0, u2=0, yo=0, ro=0.1):\n",
    "    \"\"\"Interactive visualization of the RM effect.\"\"\"\n",
    "    # Map resolution for plotting\n",
    "    res = 300\n",
    "\n",
    "    # Set the map coefficients\n",
    "    map[1] = u1\n",
    "    map[2] = u2\n",
    "    map.inc = inc\n",
    "    map.obl = obl\n",
    "    map.alpha = alpha\n",
    "    map.veq = veq * 1e3\n",
    "\n",
    "    # Check if LD is physical\n",
    "    if (u1 + u2) > 1 or (u1 + 2 * u2) < 0 or u1 < 0:\n",
    "        u1slider.style.handle_color = \"#FF0000\"\n",
    "        u2slider.style.handle_color = \"#FF0000\"\n",
    "    else:\n",
    "        u1slider.style.handle_color = \"#FFFFFF\"\n",
    "        u2slider.style.handle_color = \"#FFFFFF\"\n",
    "\n",
    "    # Plot the brightness-weighted velocity field\n",
    "    img = map.render(rv=True, res=res) * (np.pi / 1.0e3)\n",
    "    fig = plt.figure(figsize=(15, 8))\n",
    "    axim = plt.axes((0, 0.05, 0.3, 0.8))\n",
    "    axcb = plt.axes((0, 0.85, 0.3, 0.03))\n",
    "    axrm = plt.axes((0.4, 0.20, 0.6, 0.5))\n",
    "    im = axim.imshow(\n",
    "        img, cmap=\"RdBu_r\", origin=\"lower\", vmin=-veq, vmax=veq, extent=(-1, 1, -1, 1)\n",
    "    )\n",
    "    cb = plt.colorbar(im, orientation=\"horizontal\", cax=axcb)\n",
    "    cb.ax.set_xlabel(\"Radial velocity [km / s]\")\n",
    "    axim.contour(\n",
    "        img,\n",
    "        origin=\"lower\",\n",
    "        levels=np.linspace(-veq, veq, 20),\n",
    "        colors=[\"k\" for i in range(20)],\n",
    "        alpha=0.25,\n",
    "        extent=(-1, 1, -1, 1),\n",
    "    )\n",
    "    axim.axis(\"off\")\n",
    "    axim.set_aspect(1)\n",
    "    axim.axhline(yo, color=\"k\", alpha=0.5)\n",
    "    axim.axhline(yo + 0.5 * ro, color=\"k\", ls=\"--\", alpha=0.5)\n",
    "    axim.axhline(yo - 0.5 * ro, color=\"k\", ls=\"--\", alpha=0.5)\n",
    "\n",
    "    # Compute the RM effect amplitude\n",
    "    xo = np.linspace(-1 - 2 * ro, 1 + 2 * ro, 1000)\n",
    "    RM = map.rv(xo=xo, yo=yo, ro=ro)\n",
    "\n",
    "    # Plot it\n",
    "    axrm.plot(xo, RM)\n",
    "    axrm.set_xlabel(r\"Occultor x position [$R_\\star$]\", fontsize=16)\n",
    "    axrm.set_ylabel(\"Radial velocity [m /s]\", fontsize=16)\n",
    "    axrm.set_title(\"The Rossiter-McLaughlin effect\", fontsize=20)\n",
    "    axrm.plot(xo_189, rv_189, \".\")\n",
    "\n",
    "\n",
    "def visualize():\n",
    "    return interact(\n",
    "        visualize_func,\n",
    "        veq=vslider,\n",
    "        inc=islider,\n",
    "        obl=oslider,\n",
    "        alpha=aslider,\n",
    "        u1=u1slider,\n",
    "        u2=u2slider,\n",
    "        yo=yslider,\n",
    "        ro=rslider,\n",
    "    )\n",
    "\n",
    "\n",
    "visualize();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## One possible solution"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following values should get you a pretty good fit. They are close to the means of the posterior distributions when we do a full MCMC fit of the dataset, but they are probably not the \"true\" values."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "| Parameter | Value |\n",
    "| --- | --- |\n",
    "| $v_{eq}$  | 5.00  |\n",
    "|$\\lambda$  | -0.50 |\n",
    "|$i$        | 80.0  |\n",
    "|$\\alpha$   | 0.65  |\n",
    "|$u_1$      | 1.50  |\n",
    "|$u_2$      | -0.54 |\n",
    "|$b$        | -0.66 |\n",
    "|$r/R_\\star$|  0.158|"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "1980521d5f3a404d901569b570477122": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SliderStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SliderStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "",
       "handle_color": null
      }
     },
     "1c673b23a7bd4b5b9b9dd3cabc375943": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "40%"
      }
     },
     "24bdcf8b2ab94835b23ca03585ef7578": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "40%"
      }
     },
     "2b92775c65774f4bbd09777f6a2a1cbb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SliderStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SliderStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "",
       "handle_color": null
      }
     },
     "30b29b45ba9c47739f13c3fe6719f733": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SliderStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SliderStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "",
       "handle_color": "#FFFFFF"
      }
     },
     "491fc92024d14de29481498482b9aa15": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatSliderModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "FloatSliderView",
       "continuous_update": false,
       "description": "$\\alpha$:",
       "description_tooltip": null,
       "disabled": false,
       "layout": "IPY_MODEL_a176b4eb28ba47e6a5c7678c617df838",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "readout": true,
       "readout_format": ".2f",
       "step": 0.01,
       "style": "IPY_MODEL_c00cd788ac584b0a94b0e1a5dc2db609",
       "value": 0.65
      }
     },
     "4acb546727a04d819b6e6d661afba5d2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SliderStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SliderStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "",
       "handle_color": null
      }
     },
     "5deadaea7f374eaca0da040f20cf54ae": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "40%"
      }
     },
     "62fc3e157bda48c78b26ce6a96064ebe": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [
        "widget-interact"
       ],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_cb20b063f65244c2a84ae86a2e30c206",
        "IPY_MODEL_be9a491153c24ea69cd21c1eb8545539",
        "IPY_MODEL_b4a97042917740738a8458c6b59be9ae",
        "IPY_MODEL_491fc92024d14de29481498482b9aa15",
        "IPY_MODEL_e7bd628e867e4185a490ade742f05f71",
        "IPY_MODEL_698a5b942f2243179114ee8415c1c3ce",
        "IPY_MODEL_c1df725b43d946c7b51ef035f21b0d9d",
        "IPY_MODEL_83482dbf6e344059aa20fe2af02e818e",
        "IPY_MODEL_e94b7b9d45ba4976be7df18f76cc28f9"
       ],
       "layout": "IPY_MODEL_797b49b65c554d98ad9ce4fd671fa2c8"
      }
     },
     "698a5b942f2243179114ee8415c1c3ce": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatSliderModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "FloatSliderView",
       "continuous_update": false,
       "description": "$u_2$:",
       "description_tooltip": null,
       "disabled": false,
       "layout": "IPY_MODEL_fb0f5c154f424383a637d2c4dda63a0c",
       "max": 1.0,
       "min": -1.0,
       "orientation": "horizontal",
       "readout": true,
       "readout_format": ".2f",
       "step": 0.01,
       "style": "IPY_MODEL_9e1a4f19e4dd4c8b96ff09f26d0589c4",
       "value": -0.54
      }
     },
     "72c92820f73e4309ac854517697413b2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SliderStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SliderStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "",
       "handle_color": null
      }
     },
     "797b49b65c554d98ad9ce4fd671fa2c8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "83482dbf6e344059aa20fe2af02e818e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatSliderModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "FloatSliderView",
       "continuous_update": false,
       "description": "$r / R_\\star$:",
       "description_tooltip": null,
       "disabled": false,
       "layout": "IPY_MODEL_1c673b23a7bd4b5b9b9dd3cabc375943",
       "max": 0.5,
       "min": 0.01,
       "orientation": "horizontal",
       "readout": true,
       "readout_format": ".3f",
       "step": 0.001,
       "style": "IPY_MODEL_2b92775c65774f4bbd09777f6a2a1cbb",
       "value": 0.158
      }
     },
     "85473258acae4737bc08de9807fb6677": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "40%"
      }
     },
     "9e1a4f19e4dd4c8b96ff09f26d0589c4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SliderStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SliderStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "",
       "handle_color": "#FFFFFF"
      }
     },
     "a176b4eb28ba47e6a5c7678c617df838": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "40%"
      }
     },
     "b4a97042917740738a8458c6b59be9ae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatSliderModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "FloatSliderView",
       "continuous_update": false,
       "description": "$\\lambda$ [deg]:",
       "description_tooltip": null,
       "disabled": false,
       "layout": "IPY_MODEL_24bdcf8b2ab94835b23ca03585ef7578",
       "max": 90.0,
       "min": -90.0,
       "orientation": "horizontal",
       "readout": true,
       "readout_format": ".1f",
       "step": 0.1,
       "style": "IPY_MODEL_e1047e320b7f43e0b615ad9ff7b8f413",
       "value": -0.5
      }
     },
     "be9a491153c24ea69cd21c1eb8545539": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatSliderModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "FloatSliderView",
       "continuous_update": false,
       "description": "$i$ [deg]:",
       "description_tooltip": null,
       "disabled": false,
       "layout": "IPY_MODEL_5deadaea7f374eaca0da040f20cf54ae",
       "max": 179.0,
       "min": 1.0,
       "orientation": "horizontal",
       "readout": true,
       "readout_format": ".1f",
       "step": 0.1,
       "style": "IPY_MODEL_72c92820f73e4309ac854517697413b2",
       "value": 80.0
      }
     },
     "c00cd788ac584b0a94b0e1a5dc2db609": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SliderStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SliderStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "",
       "handle_color": null
      }
     },
     "c1df725b43d946c7b51ef035f21b0d9d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatSliderModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "FloatSliderView",
       "continuous_update": false,
       "description": "$b$:",
       "description_tooltip": null,
       "disabled": false,
       "layout": "IPY_MODEL_f0126ccef8f24f1ba01557616becf0e8",
       "max": 1.0,
       "min": -1.0,
       "orientation": "horizontal",
       "readout": true,
       "readout_format": ".2f",
       "step": 0.01,
       "style": "IPY_MODEL_1980521d5f3a404d901569b570477122",
       "value": -0.66
      }
     },
     "cb20b063f65244c2a84ae86a2e30c206": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatSliderModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "FloatSliderView",
       "continuous_update": false,
       "description": "$v_\\mathrm{eq}$ [km / s]:",
       "description_tooltip": null,
       "disabled": false,
       "layout": "IPY_MODEL_85473258acae4737bc08de9807fb6677",
       "max": 10.0,
       "min": 0.1,
       "orientation": "horizontal",
       "readout": true,
       "readout_format": ".2f",
       "step": 0.01,
       "style": "IPY_MODEL_4acb546727a04d819b6e6d661afba5d2",
       "value": 5.0
      }
     },
     "db3dd017dd1f43ca82263f690c91d73c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "40%"
      }
     },
     "db7295c068b8464c9061360645467280": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e1047e320b7f43e0b615ad9ff7b8f413": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "SliderStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "SliderStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": "",
       "handle_color": null
      }
     },
     "e7bd628e867e4185a490ade742f05f71": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatSliderModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatSliderModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "FloatSliderView",
       "continuous_update": false,
       "description": "$u_1$:",
       "description_tooltip": null,
       "disabled": false,
       "layout": "IPY_MODEL_db3dd017dd1f43ca82263f690c91d73c",
       "max": 2.0,
       "min": 0.0,
       "orientation": "horizontal",
       "readout": true,
       "readout_format": ".2f",
       "step": 0.01,
       "style": "IPY_MODEL_30b29b45ba9c47739f13c3fe6719f733",
       "value": 1.5
      }
     },
     "e94b7b9d45ba4976be7df18f76cc28f9": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/output",
       "_model_module_version": "1.0.0",
       "_model_name": "OutputModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/output",
       "_view_module_version": "1.0.0",
       "_view_name": "OutputView",
       "layout": "IPY_MODEL_db7295c068b8464c9061360645467280",
       "msg_id": "",
       "outputs": []
      }
     },
     "f0126ccef8f24f1ba01557616becf0e8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "40%"
      }
     },
     "fb0f5c154f424383a637d2c4dda63a0c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "40%"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
